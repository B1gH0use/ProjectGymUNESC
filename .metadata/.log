!SESSION 2020-05-22 19:45:44.217 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=1.8.0_231
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

This is a continuation of log file C:\WorksSpaces\ProjectGymUNESC\.metadata\.bak_0.log
Created Time: 2020-05-25 21:40:13.679

!ENTRY org.eclipse.jdt.ui 4 2 2020-05-25 21:40:13.679
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3378)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-05-25 21:40:13.680
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3378)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-05-25 21:40:16.690
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package PackageGraphicWindows;

import java.awt.Font;
import java.awt.Image;
import java.awt.print.PrinterJob;
import java.io.FileInputStream;
import java.io.FileNotFoundException;

import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.MediaSizeName;
import javax.security.auth.Refreshable;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import PackageDatabase.connectionFactory;
import PackageDatabase.dao.DAOmodality;
import PackageDatabase.dao.DAOuser;
import PackageDatabase.model.modelModality;
import PackageDatabase.model.modelUser;

import java.sql.Connection;
import java.util.ArrayList;

public class windowConfigure extends JInternalFrame{
	private Connection conn;
	private String[] combBoxtextPrinters = new String[] {"Selecione"/*mapear impressoras*/};
	
	private String[] combBoxTextModalitys = new String
	
	Object[] rowModality = new Object[1];
	private JTable tblModality = new JTable();
	private JScrollPane spnModality = new JScrollPane();
	private DefaultTableModel tblModelModality = new DefaultTableModel(){public boolean isCellEditable(int row, int col) {return false;}};
	
	Object[] rowDegree = new Object[1];
	private JTable tblDegree = new JTable();
	private JScrollPane spnDegree = new JScrollPane();
	private DefaultTableModel tblModelDegree = new DefaultTableModel(){public boolean isCellEditable(int row, int col) {return false;}};
	
	
	
	private JLabel lblPrinter = new JLabel();
	private JLabel lblModality = new JLabel();
	private JLabel lblValue = new JLabel();
	private JLabel lblDays = new JLabel();
	private JLabel lblDegree = new JLabel();
	
	private JTextField txfModality = new JTextField();
	private JTextField txfValue = new JTextField();
	private JTextField txfDays = new JTextField();
	private JTextField txfDegree = new JTextField();
	
	private JButton btnCancel = new JButton();
	private JButton btnGeneral = new JButton();
	private JButton btnSaveGeneral = new JButton();
	
	private JButton btnPlan = new JButton();
	private JButton btnSavePlan = new JButton();
	private JButton btnRemovePan = new JButton();
	
	private JButton btnModality = new JButton();
	private JButton btnSaveModality = new JButton();
	private JButton btnRemoveModality = new JButton();
	private JButton btnOKModality = new JButton();
	private JButton btnLessTblModality = new JButton();
	
	private JButton btnDegree = new JButton();
	private JButton btnSaveDegree  = new JButton();
	private JButton btnRemoveDegree = new JButton();
	private JButton btnOKDegree = new JButton();
	private JButton btnLessTblDegree = new JButton();
	
	private JPanel panel = new JPanel();
	
	private JComboBox<String> cbPrinter = new JComboBox<String>();
	private JComboBox<String> cbModality = new JComboBox<String>();
	
	public windowConfigure(Connection conn) {
		this.conn = conn;
		setSize(500,400);
		setTitle("Configuração");
		setIconifiable(true);
		setMaximizable(false);
		setClosable(true);
		setResizable(false);
		setLocation(350, 100);
		
		buildWindow();
		actionsButtons();
	}
	
	private void buildWindow(){
		
		panel = new JPanel();
		panel.setBorder(new EmptyBorder(5,5,5,5));
		setContentPane(panel);
		panel.setLayout(null);		
		
		//Labels
		
		btnGeneral = new JButton("Geral");
		btnGeneral.setBounds(10, 10, 100, 25);
		panel.add(btnGeneral);
		
		btnPlan = new JButton("Mensalidade");
		btnPlan.setBounds(10, 50, 100, 25);
		panel.add(btnPlan);

		btnDegree = new JButton("Graduação");
		btnDegree.setBounds(10, 90, 100, 25);
		panel.add(btnDegree);		
		
		btnModality = new JButton("Modalidade");
		btnModality.setBounds(10, 130, 100, 25);
		panel.add(btnModality);
		
	}
	private void buildWindowGeneral(){
		panel = new JPanel();
		panel.setBorder(new EmptyBorder(5,5,5,5));
		setContentPane(panel);
		panel.setLayout(null);		
		
		//Labels
		
		lblPrinter = new JLabel("Impressora");
		lblPrinter.setBounds(125, 25, 100, 20);
		lblPrinter.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblPrinter);
		
		//ComboBox
				
		cbPrinter = new JComboBox<String>();
		cbPrinter.setBounds(250, 25, 100, 20);
		cbPrinter.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(cbPrinter);
		
		//Textbox
		
		btnCancel = new JButton("Cancelar");
		btnCancel.setBounds(125, 330, 100, 25);
		panel.add(btnCancel);
		
		btnGeneral = new JButton("Geral");
		btnGeneral.setBounds(10, 10, 100, 25);
		panel.add(btnGeneral);
		
		btnPlan = new JButton("Mensalidade");
		btnPlan.setBounds(10, 50, 100, 25);
		panel.add(btnPlan);

		btnDegree = new JButton("Graduação");
		btnDegree.setBounds(10, 90, 100, 25);
		panel.add(btnDegree);		
		
		btnModality = new JButton("Modalidade");
		btnModality.setBounds(10, 130, 100, 25);
		panel.add(btnModality);
		
		actionsButtons();
	}
	
	private void buildWindowPlan(){

		panel = new JPanel();
		panel.setBorder(new EmptyBorder(5,5,5,5));
		setContentPane(panel);
		panel.setLayout(null);	
		
		//Labels
		
		lblModality = new JLabel("Modalidade");
		lblModality.setBounds(125, 20, 100, 20);
		lblModality.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblModality);
		
		lblValue = new JLabel("Valor");
		lblValue.setBounds(125, 45, 100, 20);
		lblValue.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblValue);
		
		lblDays = new JLabel("Dias Equivalentes");
		lblDays.setBounds(125, 70, 150, 20);
		lblDays.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblDays);
		
		//Textbox
		
		txfValue = new JTextField();
		txfValue.setBounds(250, 45, 200, 20);
		txfValue.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(txfValue);
		
		txfDays = new JTextField();
		txfDays.setBounds(250, 70, 200, 20);
		txfDays.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(txfDays);
		
		//ComboBox
		
		cbModality = new JComboBox<String>();
		cbModality.setBounds(250, 20, 200, 20);
		cbModality.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(cbModality);
		
		
		//Buttons

		btnCancel = new JButton("Cancelar");
		btnCancel.setBounds(125, 330, 100, 25);
		panel.add(btnCancel);
		
		btnSavePlan = new JButton("Salvar");
		btnSavePlan.setBounds(375, 330, 100, 25);
		panel.add(btnSavePlan);
		
		btnGeneral = new JButton("Geral");
		btnGeneral.setBounds(10, 10, 100, 25);
		panel.add(btnGeneral);
		
		btnPlan = new JButton("Mensalidade");
		btnPlan.setBounds(10, 50, 100, 25);
		panel.add(btnPlan);

		btnDegree = new JButton("Graduação");
		btnDegree.setBounds(10, 90, 100, 25);
		panel.add(btnDegree);		
		
		btnModality = new JButton("Modalidade");
		btnModality.setBounds(10, 130, 100, 25);
		panel.add(btnModality);
		
		actionsButtons();
	}
	
	private void buildWindowDegree() {
		panel = new JPanel();
		panel.setBorder(new EmptyBorder(5,5,5,5));
		setContentPane(panel);
		panel.setLayout(null);	
		if (tblModelDegree.getColumnCount() == 0) {
			tblModelDegree.addColumn("Modalidade");
			tblModelDegree.addColumn("Gradução");
		}
		
		tblDegree = new JTable(tblModelDegree);
		spnDegree = new JScrollPane(tblDegree);
		spnDegree.setBounds(125, 75, 350, 100);
		panel.add(spnDegree);
		tblDegree.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		
		lblModality = new JLabel("Modalidade");
		lblModality.setBounds(125, 20, 100, 20);
		lblModality.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblModality);
		
		lblDegree = new JLabel("Graduação");
		lblDegree.setBounds(125, 45, 100, 20);
		lblDegree.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblDegree);
		
		txfDegree = new JTextField();
		txfDegree.setBounds(200, 45, 200, 20);
		txfDegree.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(txfDegree);
		
		cbModality = new JComboBox<String>();
		cbModality.setBounds(200, 20, 200, 20);
		cbModality.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(cbModality);
		
		btnLessTblDegree = new JButton("-");
		btnLessTblDegree.setBounds(425, 180, 50, 25);
		panel.add(btnLessTblDegree);
		
		btnSaveDegree = new JButton("Salvar");
		btnSaveDegree.setBounds(375, 330, 100, 25);
		panel.add(btnSaveDegree);
		
		btnCancel = new JButton("Cancelar");
		btnCancel.setBounds(125, 330, 100, 25);
		panel.add(btnCancel);
		
		btnOKDegree = new JButton("OK");
		btnOKDegree.setBounds(420, 45, 50, 20);
		panel.add(btnOKDegree);
		
		btnGeneral = new JButton("Geral");
		btnGeneral.setBounds(10, 10, 100, 25);
		panel.add(btnGeneral);
		
		btnPlan = new JButton("Mensalidade");
		btnPlan.setBounds(10, 50, 100, 25);
		panel.add(btnPlan);

		btnDegree = new JButton("Graduação");
		btnDegree.setBounds(10, 90, 100, 25);
		panel.add(btnDegree);		
		
		btnModality = new JButton("Modalidade");
		btnModality.setBounds(10, 130, 100, 25);
		panel.add(btnModality);
		
		actionsButtons();
	}
	
	private void buildWindowModality(){
		panel = new JPanel();
		panel.setBorder(new EmptyBorder(5,5,5,5));
		setContentPane(panel);
		panel.setLayout(null);	
		
		if (tblModelModality.getColumnCount() == 0) {
			tblModelModality.addColumn("Modalidade");
		}
		tblModality = new JTable(tblModelModality);
		spnModality = new JScrollPane(tblModality);
		spnModality.setBounds(125, 45, 350, 100);
		panel.add(spnModality);
		tblModality.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		
		lblModality = new JLabel("Modalidade");
		lblModality.setBounds(125, 20, 100, 20);
		lblModality.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblModality);
		
		txfModality = new JTextField();
		txfModality.setBounds(200, 20, 200, 20);
		txfModality.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(txfModality);
		
		btnLessTblModality = new JButton("-");
		btnLessTblModality.setBounds(425, 150, 50, 25);
		panel.add(btnLessTblModality);
		
		btnCancel = new JButton("Cancelar");
		btnCancel.setBounds(125, 330, 100, 25);
		panel.add(btnCancel);
		
		btnSaveModality = new JButton("Salvar");
		btnSaveModality.setBounds(375, 330, 100, 25);
		panel.add(btnSaveModality);
		
		btnOKModality = new JButton("OK");
		btnOKModality.setBounds(420, 20, 50, 20);
		panel.add(btnOKModality);
		
		btnGeneral = new JButton("Geral");
		btnGeneral.setBounds(10, 10, 100, 25);
		panel.add(btnGeneral);
		
		btnPlan = new JButton("Mensalidade");
		btnPlan.setBounds(10, 50, 100, 25);
		panel.add(btnPlan);

		btnDegree = new JButton("Graduação");
		btnDegree.setBounds(10, 90, 100, 25);
		panel.add(btnDegree);		
		
		btnModality = new JButton("Modalidade");
		btnModality.setBounds(10, 130, 100, 25);
		panel.add(btnModality);
		
		actionsButtons();
	}
	
	public void actionsButtons(){
		btnGeneral.addActionListener(e->{
			if(tblModality.getRowCount() != 0 || tblDegree.getRowCount() != 0) {
				if(JOptionPane.showConfirmDialog(null, "Você NÃO Salvou as alterações, \n Deseja Continuar?", "Você Não Salvou", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
					clearTable();
				}else {return;}
			}
			buildWindowGeneral();
		});
		
		btnPlan.addActionListener(e->{
			if(tblModality.getRowCount() != 0 || tblDegree.getRowCount() != 0) {
				if(JOptionPane.showConfirmDialog(null, "Você NÃO Salvou as alterações, \n Deseja Continuar?", "Você Não Salvou", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
					clearTable();
				}else {return;}
			}
			buildWindowPlan();
		});
		
		btnModality.addActionListener(e->{
			if(tblModality.getRowCount() != 0 || tblDegree.getRowCount() != 0) {
				if(JOptionPane.showConfirmDialog(null, "Você NÃO Salvou as alterações, \n Deseja Continuar?", "Você Não Salvou", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
					clearTable();
				}else {return;}
			}
			buildWindowModality();
		});
		
		btnDegree.addActionListener(e->{
			if(tblModality.getRowCount() != 0 || tblDegree.getRowCount() != 0) {
				if(JOptionPane.showConfirmDialog(null, "Você NÃO Salvou as alterações, \n Deseja Continuar?", "Você Não Salvou", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
					clearTable();
				}else {return;}
			}
			buildWindowDegree();
		});
		
		btnCancel.addActionListener(e->{
			dispose();
		});
		
		btnSaveGeneral.addActionListener(e->{
			
		});
		
		btnSavePlan.addActionListener(e->{
			
		});
		
		btnSaveModality.addActionListener(e->{
			ArrayList<String> numdata = new ArrayList<String>();
			for (int count = 0; count < tblModelModality.getRowCount(); count++){
				  numdata.add(tblModelModality.getValueAt(count, 0).toString());
				}
			
			ArrayList<String> data = numdata;
			
			try {
				modelModality modality = new modelModality();
				 //modality.setModality(numdata);

				 
				 DAOmodality dao = new DAOmodality(conn);
				 dao.Insert(modality);
				 
				 JOptionPane.showMessageDialog(null, "Usuário Inserido");
				 
				}catch (Exception e1) {
					JOptionPane.showMessageDialog(null, "Erro ao Inserir o usuário: " + e1.getMessage());
				}
		});
		
		btnSaveDegree.addActionListener(e->{
			
		});
		
		
		btnOKDegree.addActionListener(e->{
			if(txfDegree.getText().equals("")) {
				JOptionPane.showMessageDialog(null, "Campo Posição Invalido");
				return;
			}
			
			rowDegree[0] = txfDegree.getText();
			tblModelDegree.addRow(rowDegree);
			txfDegree.setText("");
		});
		
		btnOKModality.addActionListener(e->{
			if(txfModality.getText().equals("")) {
				JOptionPane.showMessageDialog(null, "Campo Posição Invalido");
				return;
			}
			
			rowModality[0] = txfModality.getText();
			tblModelModality.addRow(rowModality);
			txfModality.setText("");
		});
		
		btnLessTblDegree.addActionListener(e->{
			if (tblDegree.getSelectedRow() >= 0){
				tblModelDegree.removeRow(tblDegree.getSelectedRow());
				tblDegree.setModel(tblModelDegree);
		    }else{
		        JOptionPane.showMessageDialog(null, "Favor selecionar uma linha");
		    }
		});
		
		btnLessTblModality.addActionListener(e->{
			if (tblModality.getSelectedRow() >= 0){
				tblModelModality.removeRow(tblModality.getSelectedRow());
				tblModality.setModel(tblModelModality);
		    }else{
		        JOptionPane.showMessageDialog(null, "Favor selecionar uma linha");
		    }
		});
		
	}
	
	private void clearTable() {
		while(tblModelModality.getRowCount()>0) {
			tblModelModality.removeRow(0);
		}
		
		while(tblModelDegree.getRowCount()>0) {
			tblModelDegree.removeRow(0);
		}
		
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3378)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-05-25 21:40:16.691
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3378)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-05-25 21:40:16.691
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3378)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2020-05-25 21:55:04.025
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package PackageGraphicWindows;

import java.awt.Font;
import java.awt.Image;
import java.awt.print.PrinterJob;
import java.io.FileInputStream;
import java.io.FileNotFoundException;

import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.MediaSizeName;
import javax.security.auth.Refreshable;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import PackageDatabase.connectionFactory;
import PackageDatabase.dao.DAOmodality;
import PackageDatabase.dao.DAOuser;
import PackageDatabase.model.modelModality;
import PackageDatabase.model.modelUser;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.List;

public class windowConfigure extends JInternalFrame{
	private Connection conn;
	private String[] combBoxtextPrinters = new String[] {"Selecione"/*mapear impressoras*/};		
	private String[] combBoxTextModalitys = new String[] {(new String[] {""+user.getIdCode(), user.getUser(), user.getPassword(), hsmProfile.get(user.getProfile())});};
	
	
	
	
	Object[] rowModality = new Object[1];
	private JTable tblModality = new JTable();
	private JScrollPane spnModality = new JScrollPane();
	private DefaultTableModel tblModelModality = new DefaultTableModel(){public boolean isCellEditable(int row, int col) {return false;}};
	
	Object[] rowDegree = new Object[1];
	private JTable tblDegree = new JTable();
	private JScrollPane spnDegree = new JScrollPane();
	private DefaultTableModel tblModelDegree = new DefaultTableModel(){public boolean isCellEditable(int row, int col) {return false;}};
	
	
	
	private JLabel lblPrinter = new JLabel();
	private JLabel lblModality = new JLabel();
	private JLabel lblValue = new JLabel();
	private JLabel lblDays = new JLabel();
	private JLabel lblDegree = new JLabel();
	
	private JTextField txfModality = new JTextField();
	private JTextField txfValue = new JTextField();
	private JTextField txfDays = new JTextField();
	private JTextField txfDegree = new JTextField();
	
	private JButton btnCancel = new JButton();
	private JButton btnGeneral = new JButton();
	private JButton btnSaveGeneral = new JButton();
	
	private JButton btnPlan = new JButton();
	private JButton btnSavePlan = new JButton();
	private JButton btnRemovePan = new JButton();
	
	private JButton btnModality = new JButton();
	private JButton btnSaveModality = new JButton();
	private JButton btnRemoveModality = new JButton();
	private JButton btnOKModality = new JButton();
	private JButton btnLessTblModality = new JButton();
	
	private JButton btnDegree = new JButton();
	private JButton btnSaveDegree  = new JButton();
	private JButton btnRemoveDegree = new JButton();
	private JButton btnOKDegree = new JButton();
	private JButton btnLessTblDegree = new JButton();
	
	private JPanel panel = new JPanel();
	
	private JComboBox<String> cbPrinter = new JComboBox<String>();
	private JComboBox<String> cbModality = new JComboBox<String>();
	
	public windowConfigure(Connection conn) {
		this.conn = conn;
		setSize(500,400);
		setTitle("Configuração");
		setIconifiable(true);
		setMaximizable(false);
		setClosable(true);
		setResizable(false);
		setLocation(350, 100);
		
		buildWindow();
		actionsButtons();
	}
	
	private void buildWindow(){
		
		panel = new JPanel();
		panel.setBorder(new EmptyBorder(5,5,5,5));
		setContentPane(panel);
		panel.setLayout(null);		
		
		//Labels
		
		btnGeneral = new JButton("Geral");
		btnGeneral.setBounds(10, 10, 100, 25);
		panel.add(btnGeneral);
		
		btnPlan = new JButton("Mensalidade");
		btnPlan.setBounds(10, 50, 100, 25);
		panel.add(btnPlan);

		btnDegree = new JButton("Graduação");
		btnDegree.setBounds(10, 90, 100, 25);
		panel.add(btnDegree);		
		
		btnModality = new JButton("Modalidade");
		btnModality.setBounds(10, 130, 100, 25);
		panel.add(btnModality);
		
	}
	private void buildWindowGeneral(){
		panel = new JPanel();
		panel.setBorder(new EmptyBorder(5,5,5,5));
		setContentPane(panel);
		panel.setLayout(null);		
		
		//Labels
		
		lblPrinter = new JLabel("Impressora");
		lblPrinter.setBounds(125, 25, 100, 20);
		lblPrinter.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblPrinter);
		
		//ComboBox
				
		cbPrinter = new JComboBox<String>();
		cbPrinter.setBounds(250, 25, 100, 20);
		cbPrinter.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(cbPrinter);
		
		//Textbox
		
		btnCancel = new JButton("Cancelar");
		btnCancel.setBounds(125, 330, 100, 25);
		panel.add(btnCancel);
		
		btnGeneral = new JButton("Geral");
		btnGeneral.setBounds(10, 10, 100, 25);
		panel.add(btnGeneral);
		
		btnPlan = new JButton("Mensalidade");
		btnPlan.setBounds(10, 50, 100, 25);
		panel.add(btnPlan);

		btnDegree = new JButton("Graduação");
		btnDegree.setBounds(10, 90, 100, 25);
		panel.add(btnDegree);		
		
		btnModality = new JButton("Modalidade");
		btnModality.setBounds(10, 130, 100, 25);
		panel.add(btnModality);
		
		actionsButtons();
	}
	
	private void buildWindowPlan(){

		panel = new JPanel();
		panel.setBorder(new EmptyBorder(5,5,5,5));
		setContentPane(panel);
		panel.setLayout(null);	
		
		//Labels
		
		lblModality = new JLabel("Modalidade");
		lblModality.setBounds(125, 20, 100, 20);
		lblModality.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblModality);
		
		lblValue = new JLabel("Valor");
		lblValue.setBounds(125, 45, 100, 20);
		lblValue.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblValue);
		
		lblDays = new JLabel("Dias Equivalentes");
		lblDays.setBounds(125, 70, 150, 20);
		lblDays.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblDays);
		
		//Textbox
		
		txfValue = new JTextField();
		txfValue.setBounds(250, 45, 200, 20);
		txfValue.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(txfValue);
		
		txfDays = new JTextField();
		txfDays.setBounds(250, 70, 200, 20);
		txfDays.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(txfDays);
		
		//ComboBox
		
		cbModality = new JComboBox<String>();
		cbModality.setBounds(250, 20, 200, 20);
		cbModality.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(cbModality);
		
		
		//Buttons

		btnCancel = new JButton("Cancelar");
		btnCancel.setBounds(125, 330, 100, 25);
		panel.add(btnCancel);
		
		btnSavePlan = new JButton("Salvar");
		btnSavePlan.setBounds(375, 330, 100, 25);
		panel.add(btnSavePlan);
		
		btnGeneral = new JButton("Geral");
		btnGeneral.setBounds(10, 10, 100, 25);
		panel.add(btnGeneral);
		
		btnPlan = new JButton("Mensalidade");
		btnPlan.setBounds(10, 50, 100, 25);
		panel.add(btnPlan);

		btnDegree = new JButton("Graduação");
		btnDegree.setBounds(10, 90, 100, 25);
		panel.add(btnDegree);		
		
		btnModality = new JButton("Modalidade");
		btnModality.setBounds(10, 130, 100, 25);
		panel.add(btnModality);
		
		actionsButtons();
	}
	
	private void buildWindowDegree() {
		panel = new JPanel();
		panel.setBorder(new EmptyBorder(5,5,5,5));
		setContentPane(panel);
		panel.setLayout(null);	
		if (tblModelDegree.getColumnCount() == 0) {
			tblModelDegree.addColumn("Modalidade");
			tblModelDegree.addColumn("Gradução");
		}
		
		tblDegree = new JTable(tblModelDegree);
		spnDegree = new JScrollPane(tblDegree);
		spnDegree.setBounds(125, 75, 350, 100);
		panel.add(spnDegree);
		tblDegree.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		
		lblModality = new JLabel("Modalidade");
		lblModality.setBounds(125, 20, 100, 20);
		lblModality.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblModality);
		
		lblDegree = new JLabel("Graduação");
		lblDegree.setBounds(125, 45, 100, 20);
		lblDegree.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblDegree);
		
		txfDegree = new JTextField();
		txfDegree.setBounds(200, 45, 200, 20);
		txfDegree.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(txfDegree);
		
		cbModality = new JComboBox<String>();
		cbModality.setBounds(200, 20, 200, 20);
		cbModality.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(cbModality);
		
		btnLessTblDegree = new JButton("-");
		btnLessTblDegree.setBounds(425, 180, 50, 25);
		panel.add(btnLessTblDegree);
		
		btnSaveDegree = new JButton("Salvar");
		btnSaveDegree.setBounds(375, 330, 100, 25);
		panel.add(btnSaveDegree);
		
		btnCancel = new JButton("Cancelar");
		btnCancel.setBounds(125, 330, 100, 25);
		panel.add(btnCancel);
		
		btnOKDegree = new JButton("OK");
		btnOKDegree.setBounds(420, 45, 50, 20);
		panel.add(btnOKDegree);
		
		btnGeneral = new JButton("Geral");
		btnGeneral.setBounds(10, 10, 100, 25);
		panel.add(btnGeneral);
		
		btnPlan = new JButton("Mensalidade");
		btnPlan.setBounds(10, 50, 100, 25);
		panel.add(btnPlan);

		btnDegree = new JButton("Graduação");
		btnDegree.setBounds(10, 90, 100, 25);
		panel.add(btnDegree);		
		
		btnModality = new JButton("Modalidade");
		btnModality.setBounds(10, 130, 100, 25);
		panel.add(btnModality);
		
		actionsButtons();
	}
	
	private void buildWindowModality(){
		panel = new JPanel();
		panel.setBorder(new EmptyBorder(5,5,5,5));
		setContentPane(panel);
		panel.setLayout(null);	
		
		if (tblModelModality.getColumnCount() == 0) {
			tblModelModality.addColumn("Modalidade");
		}
		tblModality = new JTable(tblModelModality);
		spnModality = new JScrollPane(tblModality);
		spnModality.setBounds(125, 45, 350, 100);
		panel.add(spnModality);
		tblModality.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		
		lblModality = new JLabel("Modalidade");
		lblModality.setBounds(125, 20, 100, 20);
		lblModality.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(lblModality);
		
		txfModality = new JTextField();
		txfModality.setBounds(200, 20, 200, 20);
		txfModality.setFont(new Font(Font.MONOSPACED, Font.BOLD, 12));
		panel.add(txfModality);
		
		btnLessTblModality = new JButton("-");
		btnLessTblModality.setBounds(425, 150, 50, 25);
		panel.add(btnLessTblModality);
		
		btnCancel = new JButton("Cancelar");
		btnCancel.setBounds(125, 330, 100, 25);
		panel.add(btnCancel);
		
		btnSaveModality = new JButton("Salvar");
		btnSaveModality.setBounds(375, 330, 100, 25);
		panel.add(btnSaveModality);
		
		btnOKModality = new JButton("OK");
		btnOKModality.setBounds(420, 20, 50, 20);
		panel.add(btnOKModality);
		
		btnGeneral = new JButton("Geral");
		btnGeneral.setBounds(10, 10, 100, 25);
		panel.add(btnGeneral);
		
		btnPlan = new JButton("Mensalidade");
		btnPlan.setBounds(10, 50, 100, 25);
		panel.add(btnPlan);

		btnDegree = new JButton("Graduação");
		btnDegree.setBounds(10, 90, 100, 25);
		panel.add(btnDegree);		
		
		btnModality = new JButton("Modalidade");
		btnModality.setBounds(10, 130, 100, 25);
		panel.add(btnModality);
		
		actionsButtons();
	}
	
	public void actionsButtons(){
		btnGeneral.addActionListener(e->{
			if(tblModality.getRowCount() != 0 || tblDegree.getRowCount() != 0) {
				if(JOptionPane.showConfirmDialog(null, "Você NÃO Salvou as alterações, \n Deseja Continuar?", "Você Não Salvou", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
					clearTable();
				}else {return;}
			}
			buildWindowGeneral();
		});
		
		btnPlan.addActionListener(e->{
			if(tblModality.getRowCount() != 0 || tblDegree.getRowCount() != 0) {
				if(JOptionPane.showConfirmDialog(null, "Você NÃO Salvou as alterações, \n Deseja Continuar?", "Você Não Salvou", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
					clearTable();
				}else {return;}
			}
			buildWindowPlan();
		});
		
		btnModality.addActionListener(e->{
			if(tblModality.getRowCount() != 0 || tblDegree.getRowCount() != 0) {
				if(JOptionPane.showConfirmDialog(null, "Você NÃO Salvou as alterações, \n Deseja Continuar?", "Você Não Salvou", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
					clearTable();
				}else {return;}
			}
			buildWindowModality();
		});
		
		btnDegree.addActionListener(e->{
			if(tblModality.getRowCount() != 0 || tblDegree.getRowCount() != 0) {
				if(JOptionPane.showConfirmDialog(null, "Você NÃO Salvou as alterações, \n Deseja Continuar?", "Você Não Salvou", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
					clearTable();
				}else {return;}
			}
			buildWindowDegree();
		});
		
		btnCancel.addActionListener(e->{
			dispose();
		});
		
		btnSaveGeneral.addActionListener(e->{
			
		});
		
		btnSavePlan.addActionListener(e->{
			
		});
		
		btnSaveModality.addActionListener(e->{
			ArrayList<String> numdata = new ArrayList<String>();
			for (int count = 0; count < tblModelModality.getRowCount(); count++){
				  numdata.add(tblModelModality.getValueAt(count, 0).toString());
				}
			
			ArrayList<String> data = numdata;
			
			try {
				modelModality modality = new modelModality();
				 //modality.setModality(numdata);

				 
				 DAOmodality dao = new DAOmodality(conn);
				 dao.Insert(modality);
				 
				 JOptionPane.showMessageDialog(null, "Usuário Inserido");
				 
				}catch (Exception e1) {
					JOptionPane.showMessageDialog(null, "Erro ao Inserir o usuário: " + e1.getMessage());
				}
		});
		
		btnSaveDegree.addActionListener(e->{
			
		});
		
		
		btnOKDegree.addActionListener(e->{
			if(txfDegree.getText().equals("")) {
				JOptionPane.showMessageDialog(null, "Campo Posição Invalido");
				return;
			}
			
			rowDegree[0] = txfDegree.getText();
			tblModelDegree.addRow(rowDegree);
			txfDegree.setText("");
		});
		
		btnOKModality.addActionListener(e->{
			if(txfModality.getText().equals("")) {
				JOptionPane.showMessageDialog(null, "Campo Posição Invalido");
				return;
			}
			
			rowModality[0] = txfModality.getText();
			tblModelModality.addRow(rowModality);
			txfModality.setText("");
		});
		
		btnLessTblDegree.addActionListener(e->{
			if (tblDegree.getSelectedRow() >= 0){
				tblModelDegree.removeRow(tblDegree.getSelectedRow());
				tblDegree.setModel(tblModelDegree);
		    }else{
		        JOptionPane.showMessageDialog(null, "Favor selecionar uma linha");
		    }
		});
		
		btnLessTblModality.addActionListener(e->{
			if (tblModality.getSelectedRow() >= 0){
				tblModelModality.removeRow(tblModality.getSelectedRow());
				tblModality.setModel(tblModelModality);
		    }else{
		        JOptionPane.showMessageDialog(null, "Favor selecionar uma linha");
		    }
		});
		
	}
	
	private void clearTable() {
		while(tblModelModality.getRowCount()>0) {
			tblModelModality.removeRow(0);
		}
		
		while(tblModelDegree.getRowCount()>0) {
			tblModelDegree.removeRow(0);
		}
		
	}
	List<Object> obj;
	private DAOmodality dao;
	
	private void loadData() {

		for(Object ob : obj) {
			modelUser user = (modelUser) ob;
			combBoxTextModalitys(new String[] {""+user.getIdCode(), user.getUser(), user.getPassword(), hsmProfile.get(user.getProfile())});
	}
	
	
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3378)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2020-05-25 21:55:04.025
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3378)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2020-05-25 21:55:04.025
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:3008)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3378)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:198)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3115)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1439)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:392)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:268)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1138)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:736)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:802)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1315)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:92)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
!SESSION 2020-05-27 19:39:05.699 -----------------------------------------------
eclipse.buildId=4.13.0.I20190916-1045
java.version=1.8.0_231
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.e4.ui.workbench 4 0 2020-05-27 19:39:16.335
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://org.eclipse.recommenders.news.rcp/org.eclipse.recommenders.internal.news.rcp.poll.PollNewsFeedsHandler

!ENTRY org.eclipse.e4.ui.workbench 4 0 2020-05-27 19:39:16.336
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://org.eclipse.recommenders.news.rcp/org.eclipse.recommenders.internal.news.rcp.read.ReadNewsItemsHandler

!ENTRY org.eclipse.e4.ui.workbench 4 0 2020-05-27 19:39:20.857
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://org.eclipse.recommenders.news.rcp/org.eclipse.recommenders.internal.news.rcp.toolbar.NewsToolControl

!ENTRY org.eclipse.egit.ui 2 0 2020-05-27 19:39:21.536
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\victo'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.core 4 125 2020-05-27 19:56:37.642
!MESSAGE Invalid expression entry encountered while loading watch expressions. Expression text is empty.
